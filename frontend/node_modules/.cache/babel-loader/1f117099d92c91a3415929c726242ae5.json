{"ast":null,"code":"var _jsxFileName = \"/Users/gabeabud/Code/chess/src/components/Game.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Chessboard from 'chessboardjsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst ChessReq = require('chess.js');\n\nconst useStyles = makeStyles({\n  board: {\n    marginTop: '20px',\n    boxShadow: '5px 5px 5px grey'\n  }\n});\nvar Turn;\n\n(function (Turn) {\n  Turn[\"W\"] = \"W\";\n  Turn[\"B\"] = \"B\";\n})(Turn || (Turn = {}));\n\n;\n\nconst Game = () => {\n  const classes = useStyles();\n  const [game] = useState(new ChessReq());\n  const [turn, setTurn] = useState(Turn.W);\n  const [fen, setFen] = useState(\"start\");\n  const [gameType, setGameType] = useState < GameType > useEffect(() => {\n    if (game.game_over()) return;\n\n    if (turn === Turn.B) {\n      setTimeout(() => {\n        const newFen = randomMove(game);\n        if (!newFen) return; // no more legal moves\n\n        setTurn(Turn.W);\n        setFen(newFen);\n      }, 500);\n    }\n  }, [turn]);\n\n  const randomMove = game => {\n    const moves = game.moves();\n    const move = moves[Math.floor(Math.random() * moves.length)];\n\n    if (game.move(move) !== null) {\n      return game.fen();\n    }\n\n    return null;\n  };\n\n  const onDrop = ({\n    sourceSquare,\n    targetSquare\n  }) => {\n    if (turn !== Turn.W) return;\n    let move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: 'q' // always promote to queen\n\n    });\n    if (move === null) return;\n    setTurn(Turn.B);\n    setFen(game.fen());\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.board,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Chessboard, {\n    position: fen,\n    onDrop: onDrop,\n    transitionDuration: 500,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n};\n\nexport default Game;","map":{"version":3,"sources":["/Users/gabeabud/Code/chess/src/components/Game.tsx"],"names":["React","useState","useEffect","Chessboard","makeStyles","ChessReq","require","useStyles","board","marginTop","boxShadow","Turn","Game","classes","game","turn","setTurn","W","fen","setFen","gameType","setGameType","GameType","game_over","B","setTimeout","newFen","randomMove","moves","move","Math","floor","random","length","onDrop","sourceSquare","targetSquare","from","to","promotion"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAIA,MAAMC,QAAY,GAAGC,OAAO,CAAC,UAAD,CAA5B;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,MADN;AAELC,IAAAA,SAAS,EAAE;AAFN;AADoB,CAAD,CAA5B;IAOKC,I;;WAAAA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;GAAAA,I,KAAAA,I;;AAGJ;;AAOD,MAAMC,IAAQ,GAAG,MAAM;AACrB,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAEA,QAAM,CAACO,IAAD,IAASb,QAAQ,CAAgB,IAAII,QAAJ,EAAhB,CAAvB;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAOU,IAAI,CAACM,CAAZ,CAAhC;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAAC,OAAD,CAA9B;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,GAACqB,QAAT,GAEhCpB,SAAS,CAAC,MAAM;AACd,QAAIY,IAAI,CAACS,SAAL,EAAJ,EAAsB;;AAEtB,QAAIR,IAAI,KAAKJ,IAAI,CAACa,CAAlB,EAAqB;AACnBC,MAAAA,UAAU,CAAC,MAAM;AACf,cAAMC,MAAM,GAAGC,UAAU,CAACb,IAAD,CAAzB;AACA,YAAI,CAACY,MAAL,EAAa,OAFE,CAEM;;AACrBV,QAAAA,OAAO,CAACL,IAAI,CAACM,CAAN,CAAP;AACAE,QAAAA,MAAM,CAACO,MAAD,CAAN;AACD,OALS,EAKP,GALO,CAAV;AAMD;AAEF,GAZQ,EAYN,CAACX,IAAD,CAZM,CAFT;;AAgBA,QAAMY,UAAU,GAAIb,IAAD,IAAwC;AACzD,UAAMc,KAAK,GAAGd,IAAI,CAACc,KAAL,EAAd;AACA,UAAMC,IAAI,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,KAAK,CAACK,MAAjC,CAAD,CAAlB;;AACA,QAAInB,IAAI,CAACe,IAAL,CAAUA,IAAV,MAAoB,IAAxB,EAA8B;AAC5B,aAAOf,IAAI,CAACI,GAAL,EAAP;AACD;;AACD,WAAO,IAAP;AACD,GAPD;;AASA,QAAMgB,MAAM,GAAG,CAAC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,KAA0C;AACvD,QAAIrB,IAAI,KAAKJ,IAAI,CAACM,CAAlB,EAAqB;AAErB,QAAIY,IAAI,GAAGf,IAAI,CAACe,IAAL,CAAU;AACnBQ,MAAAA,IAAI,EAAEF,YADa;AAEnBG,MAAAA,EAAE,EAAEF,YAFe;AAGnBG,MAAAA,SAAS,EAAE,GAHQ,CAGH;;AAHG,KAAV,CAAX;AAMA,QAAIV,IAAI,KAAK,IAAb,EAAmB;AAEnBb,IAAAA,OAAO,CAACL,IAAI,CAACa,CAAN,CAAP;AAEAL,IAAAA,MAAM,CAACL,IAAI,CAACI,GAAL,EAAD,CAAN;AACD,GAdD;;AAgBA,SACE;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACL,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEU,GADZ;AAEE,IAAA,MAAM,EAAEgB,MAFV;AAGE,IAAA,kBAAkB,EAAE,GAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD,CAxDD;;AA0DA,eAAetB,IAAf","sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport Chessboard from 'chessboardjsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ChessInstance, Square, Chess } from 'chess.js'\nimport { GameTypes } from '../types';\n\nconst ChessReq:any = require('chess.js');\n\nconst useStyles = makeStyles({\n  board: {\n    marginTop: '20px',\n    boxShadow: '5px 5px 5px grey',\n  }\n});\n\nenum Turn {\n  W = 'W',\n  B = 'B',\n};\n\ntype Move = {\n  sourceSquare: Square,\n  targetSquare: Square,\n};\n\nconst Game: FC = () => {\n  const classes = useStyles();\n\n  const [game] = useState<ChessInstance>(new ChessReq());\n  const [turn, setTurn] = useState<Turn>(Turn.W);\n  const [fen, setFen] = useState(\"start\");\n  const [gameType, setGameType] = useState<GameType>\n\n  useEffect(() => {\n    if (game.game_over()) return;\n\n    if (turn === Turn.B) {\n      setTimeout(() => {\n        const newFen = randomMove(game)\n        if (!newFen) return; // no more legal moves\n        setTurn(Turn.W);\n        setFen(newFen);\n      }, 500);\n    }\n\n  }, [turn]);\n\n  const randomMove = (game: ChessInstance): string | null => {\n    const moves = game.moves();\n    const move = moves[Math.floor(Math.random() * moves.length)];\n    if (game.move(move) !== null) {\n      return game.fen();\n    }\n    return null;\n  }\n\n  const onDrop = ({ sourceSquare, targetSquare }: Move) => {\n    if (turn !== Turn.W) return;\n\n    let move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: 'q', // always promote to queen\n    })\n\n    if (move === null) return;\n\n    setTurn(Turn.B);\n\n    setFen(game.fen());\n  };\n\n  return (\n    <div className={classes.board}>\n      <Chessboard \n        position={fen}\n        onDrop={onDrop}\n        transitionDuration={500}\n      />\n    </div>\n  );\n};\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}